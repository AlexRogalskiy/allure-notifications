name: build-jar

on:
#   push:
#     branches: [ master ]
#   pull_request:
#     branches: [ master ]
  workflow_dispatch:
    inputs:
      release_name:
        description: 'Name of release  (ie bug fixes)'
        required: true
      tag_name:
        description: 'Name of tag  (ie testing)'
        required: true 

jobs:
  build:
    name: build new version
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Build with Gradle
      run: ./gradlew assemble
   
    - name: 'Get Version Number'
      run: echo "version=$(./gradlew properties -q | grep 'version:' | awk '{print $2}')" >> $GITHUB_ENV
   
    - name: Print version
      run: echo $version
    
    - name: Publish JAR
      uses: actions/upload-artifact@v2
      with:
        name: 'allure-piechart-telegram-${{env.version}}.jar'
        path: build/libs/*.jar
    
    - name: Read Changelog
      uses: scottbrenner/generate-changelog-action@master
      id: Changelog
      env:
        REPO: ${{ github.repository }}
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.tag_name }}
        release_name: ${{ github.event.inputs.release_name }}
        body:  ${{ steps.Changelog.outputs.changelog }}
        draft: false
        prerelease: false
        
    - name: Upload Release Asset 
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/libs/allure-piechart-telegram-${{env.version}}.jar
        asset_name: 'allure-piechart-telegram-${{env.version}}.jar'
        asset_content_type: application/java-archive  
    
    - name: Publish Release
      uses: eregon/publish-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        release_id: ${{ steps.create_release.outputs.id }}
